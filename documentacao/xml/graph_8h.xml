<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="graph_8h" kind="file" language="C++">
    <compoundname>graph.h</compoundname>
    <includes local="no">climits</includes>
    <includes local="no">vector</includes>
    <includes local="no">list</includes>
    <includes local="no">iostream</includes>
    <includes local="yes">set</includes>
    <includes local="yes">map</includes>
    <includes local="no">queue</includes>
    <includes local="yes">stack</includes>
    <includes refid="read_files_8h" local="yes">readFiles.h</includes>
    <includes refid="min_heap_8h" local="yes">../include/minHeap.h</includes>
    <includes refid="max_heap_8h" local="yes">../include/maxHeap.h</includes>
    <includedby refid="menu_8h" local="yes">menu.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>graph.h</label>
        <link refid="graph_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>../include/maxHeap.h</label>
        <link refid="max_heap_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>../include/minHeap.h</label>
        <link refid="min_heap_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>objs.h</label>
        <link refid="objs_8h_source"/>
      </node>
      <node id="10">
        <label>readFiles.h</label>
        <link refid="read_files_8h_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>climits</label>
      </node>
      <node id="12">
        <label>fstream</label>
      </node>
      <node id="5">
        <label>iostream</label>
      </node>
      <node id="4">
        <label>list</label>
      </node>
      <node id="7">
        <label>map</label>
      </node>
      <node id="8">
        <label>queue</label>
      </node>
      <node id="6">
        <label>set</label>
      </node>
      <node id="13">
        <label>sstream</label>
      </node>
      <node id="9">
        <label>stack</label>
      </node>
      <node id="15">
        <label>unordered_map</label>
      </node>
      <node id="3">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>graph.h</label>
        <link refid="graph_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>menu.h</label>
        <link refid="menu_8h_source"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_graph" prot="public">Graph</innerclass>
    <innerclass refid="struct_graph_1_1_edge" prot="private">Graph::Edge</innerclass>
    <innerclass refid="struct_graph_1_1_node" prot="private">Graph::Node</innerclass>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="graph_8h_1a12c2040f25d8e3a7b9e1c2024c618cb6" prot="public" static="no">
        <name>INF</name>
        <initializer>( INT_MAX / 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graph.h" line="16" column="9" bodyfile="graph.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="graph_8h_1ab87bacfdad76e61b9412d7124be44c1c" prot="public" static="no" strong="no">
        <type></type>
        <name>Color</name>
        <enumvalue id="graph_8h_1ab87bacfdad76e61b9412d7124be44c1ca283fc479650da98250635b9c3c0e7e50" prot="public">
          <name>WHITE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8h_1ab87bacfdad76e61b9412d7124be44c1ca38566822dbd9408c447abfd3ed4a85d2" prot="public">
          <name>GREY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="graph_8h_1ab87bacfdad76e61b9412d7124be44c1caf77fb67151d0c18d397069ad8c271ba3" prot="public">
          <name>BLACK</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Possible node colors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graph.h" line="23" column="1" bodyfile="graph.h" bodystart="23" bodyend="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="graph_8h_1a6edf4c9c74b446bdb72c5bcd7c7d0b1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_graph" kindref="compound">Graph</ref></type>
        <definition>Graph buildGraph</definition>
        <argsstring>(int id, bool includeResidual=false)</argsstring>
        <name>buildGraph</name>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>includeResidual</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="graph.h" line="242" column="7" declfile="graph.h" declline="242" declcolumn="7"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>_GRAPH_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_GRAPH_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;climits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;set&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;map&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;queue&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;stack&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;readFiles.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/minHeap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/maxHeap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INF<sp/>(<sp/>INT_MAX<sp/>/<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>Color<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>WHITE,<sp/>GREY,<sp/>BLACK</highlight></codeline>
<codeline lineno="25"><highlight class="normal">};</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="class_graph" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_graph" kindref="compound">Graph</ref><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Edge<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dest,<sp/>duration,<sp/>cap,<sp/>flow,<sp/>residual;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">Node<sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list&lt;Edge&gt;<sp/>adj;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dist;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>capacity;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pred;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Color<sp/>color;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>visited;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>degree<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ES<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LF<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Important<sp/>information<sp/>about<sp/>Graph<sp/>Object</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>includeResidual;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;Node&gt;<sp/>nodes;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="66" refid="class_graph_1ab7ed46069f0ef69abd002f00512c3eb4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="class_graph_1ab7ed46069f0ef69abd002f00512c3eb4" kindref="member">Graph</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodes,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>includeResidual<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="class_graph_1a8e1ef0e7ed58ac4853273fdf43c67801" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_graph" kindref="compound">Graph</ref><sp/>*<ref refid="class_graph_1a8e1ef0e7ed58ac4853273fdf43c67801" kindref="member">transpose</ref>();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="class_graph_1a8d01a6cde3a2fb3732d02bed81268546" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_graph_1a8d01a6cde3a2fb3732d02bed81268546" kindref="member">addEdge</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>duration,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cap<sp/>=<sp/>1);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="class_graph_1ac8568e2dee70d12201c9aba194e79d2e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_graph_1ac8568e2dee70d12201c9aba194e79d2e" kindref="member">maximum_capacity</ref>();</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="class_graph_1a43b3f9654a3e60fb52f778f15daef9c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_graph_1a43b3f9654a3e60fb52f778f15daef9c1" kindref="member">maximum_capacity_with_shortest_path</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max<sp/>=<sp/>INT32_MAX);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="class_graph_1ac3828054e06e2e56673e498c2a9e30cd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_graph_1ac3828054e06e2e56673e498c2a9e30cd" kindref="member">shortest_path_with_maximum_capacity</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min<sp/>=<sp/>INT32_MIN);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="class_graph_1acdef71890a7ec2ae60a920858360d6e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>list&lt;int&gt;<sp/><ref refid="class_graph_1acdef71890a7ec2ae60a920858360d6e3" kindref="member">get_path</ref>();</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="class_graph_1a0b8af8ed6acdd35d9321742c7ffa4950" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_graph_1a0b8af8ed6acdd35d9321742c7ffa4950" kindref="member">dfs</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="125" refid="class_graph_1a7ad72ed7eee778c1874d62fefe6377b4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_graph_1a7ad72ed7eee778c1874d62fefe6377b4" kindref="member">bfs_sink</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>u,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stack&lt;int&gt;<sp/>topologicalSorting();</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="class_graph_1a20f902dc53b8885c924f230797f94f86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_graph_1a20f902dc53b8885c924f230797f94f86" kindref="member">dfsTopSort</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v,<sp/>stack&lt;int&gt;<sp/>&amp;l);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="class_graph_1aa201cbe7d928038c7b9cb5cd759ea98b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_graph_1aa201cbe7d928038c7b9cb5cd759ea98b" kindref="member">cycleDfs</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="146" refid="class_graph_1a1f7cc151b51ef6adbb113a94b43aa46f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_graph_1a1f7cc151b51ef6adbb113a94b43aa46f" kindref="member">critical_path_lf</ref>();</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="151" refid="class_graph_1a8d1e98320ebaa549bacaca74e68038f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_graph_1a8d1e98320ebaa549bacaca74e68038f3" kindref="member">max_FL</ref>();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="156" refid="class_graph_1ad80775afcaa1329fd46436ab254d1d5c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_graph_1ad80775afcaa1329fd46436ab254d1d5c" kindref="member">max_FT</ref>();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="class_graph_1ac83d539cd6bea2604ebd5b8f365aa513" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_graph_1ac83d539cd6bea2604ebd5b8f365aa513" kindref="member">max_path_dag</ref>();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="class_graph_1aa4c43c82778e410053e2fc19012dcc2b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_graph_1aa4c43c82778e410053e2fc19012dcc2b" kindref="member">cen_2_1</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>groupSize);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="177" refid="class_graph_1a9843cadf490a7d040bb1b4c57e2ebe35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_graph_1a9843cadf490a7d040bb1b4c57e2ebe35" kindref="member">edmonds_karp_bfs</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="184" refid="class_graph_1a73331ecf77c21f70217ff52ac85464d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_graph_1a73331ecf77c21f70217ff52ac85464d6" kindref="member">edmonds_karp_dfs</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>v);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="class_graph_1ac615b1ce04b5cbc2c7e90d725eacef49" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_graph_1ac615b1ce04b5cbc2c7e90d725eacef49" kindref="member">dinic_algo</ref>();</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="class_graph_1a573010ea691bfd1d99c4ca51da75a354" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_graph_1a573010ea691bfd1d99c4ca51da75a354" kindref="member">send_dinic_flow</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flow,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="class_graph_1a0f711308a54d86f3ef9e5e4d37f68942" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_graph_1a0f711308a54d86f3ef9e5e4d37f68942" kindref="member">edmonds_karp</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>groupSize_limiter<sp/>=<sp/>0,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useDfs<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="216" refid="class_graph_1a33d7f8a950836ca72fa684efbe108300" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_graph_1a33d7f8a950836ca72fa684efbe108300" kindref="member">edmonds_karp_update</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bottleNeck,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="class_graph_1a701b7ebbaec62bc9cdb70bb6288bbd43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_graph_1a701b7ebbaec62bc9cdb70bb6288bbd43" kindref="member">getPathBottleNeck</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="class_graph_1a7187806eda0055303ee4974972da88c9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_graph_1a7187806eda0055303ee4974972da88c9" kindref="member">edmonds_karp_flow_path</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>s,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_graph_1a0b8af8ed6acdd35d9321742c7ffa4950" kindref="member">dfs</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="class_graph_1aae8066c344d480bf4f4c522c53de2c80" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>[[nodiscard]]<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_graph_1aae8066c344d480bf4f4c522c53de2c80" kindref="member">isValidGraph</ref>()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">};</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><ref refid="class_graph" kindref="compound">Graph</ref><sp/>buildGraph(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>includeResidual<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="graph.h"/>
  </compounddef>
</doxygen>
